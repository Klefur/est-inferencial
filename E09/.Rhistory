datos <- datos %>% pivot_longer(!"efecto_delta",
names_to = "fuente",
values_to = "poder")
# Se formatea fuente como variable categorica.
niveles <- c("n100_alfa")
etiquetas <- c("alfa = 0.05")
datos[["fuente"]] <- factor(datos[["fuente"]], levels = niveles, labels = etiquetas)
# Graficar curvas de poder
g <- ggplot(datos, aes(efecto_delta, poder, colour = factor(fuente)))
g <- g + geom_line()
g <- g + labs(colour = "")
g <- g + ylab("Poder estadistico")
g <- g + xlab("Tamaño del efecto")
g <- g + scale_color_manual(values = c("red"))
g <- g + theme_pubr()
g <- g + ggtitle("Curvas de poder para prueba t unilateral")
g <- g + geom_vline(xintercept = 0, linetype = "dashed")
print(g)
n100_alfa <- power.t.test(n = 100,
delta = efecto_delta,
sd = 1,
sig.level = alfa,
type = "one.sample",
alternative = "two.sided")$power
# Construir matriz de datos en formato ancho.
datos <- data.frame(efecto_delta, n100_alfa)
# Se lleva a formato largo.
datos <- datos %>% pivot_longer(!"efecto_delta",
names_to = "fuente",
values_to = "poder")
# Se formatea fuente como variable categorica.
niveles <- c("n100_alfa")
etiquetas <- c("alfa = 0.05")
datos[["fuente"]] <- factor(datos[["fuente"]], levels = niveles, labels = etiquetas)
# Graficar curvas de poder
g <- ggplot(datos, aes(efecto_delta, poder, colour = factor(fuente)))
g <- g + geom_line()
g <- g + labs(colour = "")
g <- g + ylab("Poder estadistico")
g <- g + xlab("Tamaño del efecto")
g <- g + scale_color_manual(values = c("red"))
g <- g + theme_pubr()
g <- g + ggtitle("Curvas de poder para prueba t unilateral")
g <- g + geom_vline(xintercept = 0, linetype = "dashed")
print(g)
efecto <- seq(0, 1, 0.01)
n100_alpha0455 = power.t.test(n = 100,
delta = efecto,
sd = sigma,
sig.level = alfa/100,
type = "one.sample",
alternative = "two.sided")$power
# Construir matriz de datos en formato ancho
datos <- data.frame(efecto, n100_alpha0455)
# Llevar a formato largo
datos <- datos %>% pivot_longer(!"efecto", names_to = "fuente", values_to = "poder")
# Formatear fuente como variable categórica
niveles <- c("n100_alpha0455")
etiquetas <- c("n = 100, alfa = 0.0455")
datos[["fuente"]] <- factor(datos[["fuente"]], levels = niveles, labels = etiquetas)
# Graficar la curva de poder
g <- ggplot(datos, aes(efecto, poder, colour = factor(fuente)))
g <- g + geom_line()
g <- g + labs(colour = "")
g <- g + ylab("Poder estadístico")
g <- g + xlab("Tamaño del efecto")
g <- g + scale_color_manual(values = c("red"))
g <- g + theme_pubr()
g <- g + ggtitle("Curvas de poder para prueba t bilateral")
g <- g + geom_vline(xintercept = mu0 - 9.6, linetype = "dashed")
g <- g + ylim(0, 1)
g <- g + xlim(0, 1)
print(g)
print(n100_alpha0455[40])
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
install.packages("tidyverse")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
install.packages("tidyverse")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
diferencia <- media_efecto - media_nula
resultado <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = alpha,
power = poder,
type = "one.sample",
alternative = "two.sided")
n_new <- ceiling(resultado[["n"]])
diferencia <- media_efecto - media_nula
resultado <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = alpha,
power = poder,
type = "one.sample",
alternative = "two.sided")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
resultado <- power.t.test(n = NULL,
delta = diferencia,
sd = 1,
sig.level = alpha,
power = poder,
type = "one.sample",
alternative = "two.sided")
resultado <- power.t.test(n = NULL,
delta = diferencia,
sd = 1,
sig.level = alfa,
power = poder,
type = "one.sample",
alternative = "two.sided")
n_new <- ceiling(resultado[["n"]])
print(n_new)
poder <- 0.7
alfa <- 0.01
diferencia <- media_efecto - media_nula
resultado <- power.t.test(n = NULL,
delta = diferencia,
sd = 1,
sig.level = alfa,
power = poder,
type = "one.sample",
alternative = "two.sided")
n_requerido <- ceiling(resultado[["n"]])
print(n_requerido)
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
source("~/Escritorio/Code/est-inferencial/E03/E03-respuesta-equipo-8.R")
aprueba <- c(177, 77, 21)
rechaza <- c(87, 85, 36)
tabla <- as.table(rbind(aprueba, rechaza))
dimnames(tabla) <- list(asociacion = c("Estudiante", "Profesor", "Funcionario"),
opinion = c("Aprueba", "Rechaza"))
dimnames(tabla) <- list(opinion = c("Aprueba", "Rechaza"),
asociacion = c("Estudiante", "Profesor", "Funcionario"))
tabla
print(tabla)
# Hacer prueba chi-cuadrado de independencia.
prueba <- chisq.test(tabla)
# Hacer prueba chi-cuadrado de independencia.
prueba <- chisq.test(tabla)
cat("\nLa prueba internamente calcula los valores esperados:\n")
esperados <- round(prueba[["expected"]], 3)
print(esperados)
cat("\nResultado de la prueba:\n")
print(prueba)
getwd()
archivo <- read.csv2("EP04Datos.xls")
archivo <- read.csv2("EP04Datos.xls")
archivo <- read.csv2("EP04 Datos.xls")
install.packages("openxlsx")
# -----------------------------------------------------------------------------
library(openxlsx)
archivo <- read.xlsx("EP04 Datos.xls")
archivo <- read.xlsx("EP04 Datos.xlsx")
archivo <- read_xls("EP04 Datos.xls")
archivo <- read_excel("EP04 Datos.xls")
# -----------------------------------------------------------------------------
library(readxl)
alfa <- 0.05
archivo <- read_excel("EP04 Datos.xls")
set.seed(347)
alfa <- 0.05
archivo <- read_excel("EP04 Datos.xls")
View(archivo)
install.packages("RVAideMemoire")
archivo
archivo[["Calculo"]]
factor(archivo[["Calculo"]])
datos[["Calculo"]] <- factor(datos[["Calculo"]])
datos[["Algebra"]] <- factor(datos[["Algebra"]])
datos[["Fisica"]] <- factor(datos[["Fisica"]])
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos[["Calculo"]] <- factor(datos[["Calculo"]])
datos[["Algebra"]] <- factor(datos[["Algebra"]])
datos[["Fisica"]] <- factor(datos[["Fisica"]])
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(dplyr)
library(tidyverse)
library(RVAideMemoire)
install.packages("RVAideMemoire")
install.packages("mixOmics")
library(rcompanion)
install.packages("rcompanion")
datos
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos
datos[["Calculo"]] <- factor(datos[["Calculo"]])
datos[["Algebra"]] <- factor(datos[["Algebra"]])
datos[["Fisica"]] <- factor(datos[["Fisica"]])
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos[["Calculo"]] <- factor(datos[["Calculo"]])
instancia = 1:4
hormiga = c(1, 2,3 ,4)
anelin = c(3, 4, 5, 6)
genetico = c(6, 2, 3, 1)
matriz = data.frame(instancia, hormiga, anelin, genetico)
matriz
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos
View(matriz)
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos = as.data.frame(datos)
View(datos)
datos
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos[["Calculo"]] <- factor(datos[["Calculo"]])
datos[["Algebra"]] <- factor(datos[["Algebra"]])
datos[["Fisica"]] <- factor(datos[["Fisica"]])
datos[["FIsica"]]
datos[["Fisica"]]
View(datos)
matriz <- matriz %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
matriz
matriz <- matriz %>% pivot_longer(c("hormiga", "anelin", "genetico"),
names_to = "Ramos",
values_to = "Resultado")
matriz
matriz[["genetico"]]
instancia = 1:4
hormiga = c(0, 1, 1 ,0)
anelin = c(1, 1, 1, 1)
genetico = c(0, 0, 0, 1)
matriz = data.frame(instancia, hormiga, anelin, genetico)
matriz <- matriz %>% pivot_longer(c("hormiga", "anelin", "genetico"),
names_to = "Ramos",
values_to = "Resultado")
matriz
matriz[["genetico"]]
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos = as.data.frame(datos)
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos[["Instancia"]] <- factor(datos[["Calculo"]])
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
View(datos)
datos
datos[["Id"]] <- factor(datos[["Id"]])
datos[["Ramos"]] <- factor(datos[["Ramos"]])
View(datos)
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
library(dplyr)
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
install.packages("RVAideMemoire")
install.packages("mixOmics")
update.packages(checkBuilt=TRUE, ask=FALSE)
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(dplyr)
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
install.packages("RVAideMemoire")
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
install.packages("mixOmics")
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
set.seed(347)
alfa <- 0.05
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos[["Id"]] <- factor(datos[["Id"]])
datos[["Ramos"]] <- factor(datos[["Ramos"]])
# Hacer prueba Q de Cochran.
prueba <- cochran
library(RVAideMemoire)
install.packages("RVAideMemoire")
install.packages("RVAideMemoire_0.9-83-3.tar.gz",repos=NULL)
deps <- c("ade4", "car", "cramer", "dunn.test", "FactoMineR",
"lme4", "mixOmics", "multcompView", "pls", "pspearman",
"statmod", "vegan")
install.packages(deps)
install.packages(deps)
install.packages("RVAideMemoire")
install.packages("RVAideMemoire")
install.packages("RVAideMemoire")
S
install.packages("mixOmics")
install.packages("BiocManager")
BiocManager::install('mixOmics')
install.packages("RVAideMemoire")
# -----------------------------------------------------------------------------
# Pregunta 4
library(readxl)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
library(tidyverse)
library(RVAideMemoire)
library(rcompanion)
set.seed(347)
alfa <- 0.05
# matriz de datos.
datos <- read_excel("EP04 Datos.xls")
datos <- datos %>% pivot_longer(c("Calculo", "Algebra", "Fisica"),
names_to = "Ramos",
values_to = "Resultado")
datos[["Id"]] <- factor(datos[["Id"]])
datos[["Ramos"]] <- factor(datos[["Ramos"]])
# Hacer prueba Q de Cochran.
prueba <- cochran.qtest(Resultado ~ Ramos | Id,
data = datos, alpha = alfa)
# con una significancia de 0.05, la investigacion no presenta sufienciente
print(prueba)
getwd
getwd()
archivo <- read.csv2("EP05 Datos.csv", sep = ";")
View(archivo)
archivo <- read.csv2("EP05 Datos.csv", sep = ".")
View(archivo)
archivo <- read.csv2("EP05 Datos.csv", sep = ",")
View(archivo)
quimica <- archivo[["quimica"]]
quimica <- archivo[archivo$area %in% c("Química"), ]
View(quimica)
View(quimica)
quimica <- quimica[quimica$dificultad %in% c("Baja"), ]
View(quimica)
quimica <- archivo[archivo$area %in% c("Química"), ]
View(quimica)
quimica_baja <- quimica[quimica$dificultad %in% c("Baja"), ]
instancia <- factor(1:200)
quimica_baja <- quimica[quimica$dificultad %in% c("Baja"), ]
quimica_media <- quimica[quimica$dificultad %in% c("Media"), ]
quimica_alta <- quimica[quimica$dificultad %in% c("Alta"), ]
datos <- data.frame(instancia, quimica_baja, quimica_media, quimica_alta)
View(datos)
quimica_baja <- quimica[quimica$dificultad %in% c("Baja"), ]$tiempo
datos <- data.frame(instancia, quimica_baja, quimica_media, quimica_alta)
View(datos)
quimica <- archivo[archivo$area %in% c("Química"), ]
instancia <- factor(1:200)
quimica_baja <- quimica[quimica$dificultad %in% c("Baja"), ]$tiempo
quimica_media <- quimica[quimica$dificultad %in% c("Media"), ]$tiempo
quimica_alta <- quimica[quimica$dificultad %in% c("Alta"), ]$tiempo
datos <- data.frame(instancia, quimica_baja, quimica_media, quimica_alta)
View(datos)
datos
library(tidyverse)
library(ggpubr)
library(ez)
install.packages("ez")
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "Química", values_to = "tiempo")
Baja <- quimica[quimica$dificultad %in% c("Baja"), ]$tiempo
Media <- quimica[quimica$dificultad %in% c("Media"), ]$tiempo
Alta <- quimica[quimica$dificultad %in% c("Alta"), ]$tiempo
datos <- data.frame(instancia, Baja, Media, Alta)
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "Química", values_to = "tiempo")
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "Dificultad", values_to = "tiempo")
archivo <- read.csv2("EP05 Datos.csv", sep = ",")
quimica <- archivo[archivo$area %in% c("Química"), ]
instancia <- factor(1:200)
Baja <- quimica[quimica$dificultad %in% c("Baja"), ]$tiempo
Media <- quimica[quimica$dificultad %in% c("Media"), ]$tiempo
Alta <- quimica[quimica$dificultad %in% c("Alta"), ]$tiempo
datos <- data.frame(instancia, Baja, Media, Alta)
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "Dificultad", values_to = "tiempo")
datos[["Dificultad"]] <- factor(datos[["Dificultad"]])
datos
View(datos)
View(quimica)
View(datos)
View(quimica)
datos <- data.frame(instancia, Baja, Media, Alta)
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "dificultad", values_to = "tiempo")
datos[["dificultad"]] <- factor(datos[["dificultad"]])
g <- ggqqplot(datos, x = "tiempo",
y = "dificultad",
color = "dificultad")
g <- g + facet_wrap(~ area)
print(g)
g <- g + facet_wrap(~ dificultad)
g <- ggqqplot(datos, x = "tiempo",
y = "dificultad",
color = "dificultad")
g <- g + facet_wrap(~ dificultad)
print(g)
install.packages("ez")
library(ez)
ezANOVA(datos)
ezANOVA(data = datos, dv = tiempo, within = dificultad,
wid = instancia, return_aov = TRUE)
print(summary(prueba$aov)
print(summary(prueba$aov))
print(summary(prueba$aov))
prueba <- ezANOVA(data = datos, dv = tiempo, within = dificultad,
wid = instancia, return_aov = TRUE)
print(summary(prueba$aov))
archivo <- read.csv2("EP05 Datos.csv", sep = ",")
datos <- archivo[archivo$area %in% c("Química"), ]
g <- ggqqplot(datos, x = "tiempo",
y = "dificultad",
color = "dificultad")
g <- g + facet_wrap(~ dificultad)
print(g)
prueba <- ezANOVA(data = datos, dv = tiempo, within = dificultad,
wid = instancia, return_aov = TRUE)
print(summary(prueba$aov))
print(prueba[["Mauchly's Test for Sphericity"]])
print(prueba$`Mauchly's Test for Sphericity`)
print(prueba$`Sphericity Corrections`)
source("~/Escritorio/Code/est-inferencial/E06/EI-EP06-respuesta-equipo-3.R")
library(tidyverse)
library(ggpubr)
library(ez)
library(tidyverse)
library(ggpubr)
library(ez)
archivo <- read.csv2("EP05 Datos.csv", sep = ",")
quimica <- archivo[archivo$area %in% c("Química"), ]
instancia <- factor(1:200)
Baja <- quimica[quimica$dificultad %in% c("Baja"), ]$tiempo
Media <- quimica[quimica$dificultad %in% c("Media"), ]$tiempo
Alta <- quimica[quimica$dificultad %in% c("Alta"), ]$tiempo
datos <- data.frame(instancia, Baja, Media, Alta)
datos <- datos %>% pivot_longer(c("Baja", "Media", "Alta"),
names_to = "dificultad", values_to = "tiempo")
datos[["dificultad"]] <- factor(datos[["dificultad"]])
g <- ggqqplot(datos, x = "tiempo",
y = "dificultad",
color = "dificultad")
g <- g + facet_wrap(~ dificultad)
print(g)
prueba <- ezANOVA(data = datos, dv = tiempo, within = dificultad,
wid = instancia, return_aov = TRUE)
print(summary(prueba$aov))
print(prueba[["Mauchly's Test for Sphericity"]])
print(prueba$`Sphericity Corrections`)
View(datos)
View(archivo)
holm <- pairwise.t.test(datos[["tiempo"]], datos[["dificultad"]], p.adj = "holm"
, paired = TRUE)
print(holm)
source("~/Escritorio/Code/est-inferencial/E06/EI-EP06-respuesta-equipo-3.R")
source("~/Escritorio/Code/est-inferencial/E06/EI-EP06-respuesta-equipo-3.R")
setwd("~/Escritorio/Code/est-inferencial/E09")
library(ggpubr)
library(ggplot2)
library(dplyr)
# Se leen los datos con la codificación adecuada
datos <- read.csv2("EP09 Datos.csv")
# Verificar las primeras filas de los datos para asegurarse de que se leyeron correctamente
head(datos)
set.seed(2789)
muestra <- datos %>% filter(Gender =='1')
muestra2 <- muestra[sample(nrow(muestra),50), ]
sample(muestra2 ,8)
modelo<-lm(Weight ~ Navel.Girth,muestra2)
print(summary(modelo))
sample(muestra2 ,8)
sample(muestra2 ,8)
nueva_2 <- permutacion[( n_1+1) : n ]
